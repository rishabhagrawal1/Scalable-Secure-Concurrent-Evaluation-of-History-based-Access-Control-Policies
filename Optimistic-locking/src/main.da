import sys, os
import json,random,copy
sys.path.insert(0, '../config')
from config import Config
config(clock = 'Lamport')
config(channel = 'fifo')


class Main(process):
    def setup(conf_file:str, policy_file:str, data_file: str , random_input : bool): pass

    def read_configuration(conf_data):
        config_obj = Config(conf_data, conf_file, policy_file, data_file)
        config_obj.parse_conf_data()
        return config_obj

    def init_all_processes(config):
        try:
            ### Load all components ###
            a = import_da("application")
            c = import_da("coordinator")
            d = import_da("database")

        except ImportError:
            output("Error in import", sep="|")

        try:
            ### Create each components based on config file ###
            ### Worker will be created in the resource ###
            
            coord = new(c.Coordinator, num=config.num_coordinator)
            data = new(d.Database,  num=1)
            app = new(a.Application, num=config.num_applications)

        except:
            output("Error in process creation")
        try:
            ## pass sub list to app process ##
            coord_list = list(coord)
            #setup(app, (coord_list))
            counter = 0
            for a in app:
                setup(a, (coord_list, conf_file, config.num_applications, counter))
                counter += 1

            #Config Object and coordinator process list to conordinators
            setup(coord, (config, coord_list, 0, data, None))

            m = list()
            m.append(data_file)
            setup(data, (m))
        except:
            output("Error in setup")

        try:
            ## start the processes ##
            start(app)
            start(coord)
            start(data)
        except:
            output("Error in starting processes")

    def generateRandomConfig(conf_data):
        conf_data_random = copy.deepcopy(conf_data)
        conf_data_random["operations"] = []
        output(conf_data_random)
        output(conf_data)
        operations = conf_data["operations"]
        for i in range(0,100):
            x = random.randint(0,len(conf_data["operations"])-1)
            print(x,type(x),len(conf_data["operations"]))
            conf_data_random["operations"].append(operations[x])
        with open(conf_file, 'w' ,encoding='utf-8') as conf:
            json.dump(conf_data_random , conf ) 
        return conf_data_random 

    def run():
            if(os.path.exists(conf_file)):
                print(random_input)
                with open(conf_file, encoding='utf-8') as conf:
                    conf_data = json.loads(conf.read())
                    if(random_input == True):
                        print("Going to print a lot")
                        #conf_data = generateRandomConfig(conf)
                config_obj = read_configuration(conf_data)      
                init_all_processes(config_obj)
                try:
                    while(True):
                        pass
                except KeyboardInterrupt:
                    output("User requested abort")
                    sys.exit(0)
            else:
                output("error in opening file")

def main():
    conf_file = sys.argv[1] if len(sys.argv) > 1 else "../test/conf1.json"
    policy_file = sys.argv[2] if len(sys.argv) > 2 else "../policy/policy1.xml"
    data_file = sys.argv[3] if len(sys.argv) > 3 else "../data/data1.json"
    random_input = sys.argv[4] if len(sys.argv) > 4 else False
    print(random_input)
    m = new(Main)
    setup(m, (conf_file, policy_file, data_file , random_input))
    start(m)

if __name__=='__main__':
    main()
